# ==============================
#  Stage 1 — Dependencies
# ==============================
FROM ros:humble-ros-base AS dependencies

# Set up environment
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_WS=/opt/swarm_lio_ws

# ---- Install system dependencies, ROS packages, and dev tools in one layer ----
# Download package lists once
RUN apt-get clean && rm -rf /var/lib/apt/lists/* && apt-get update -o Acquire::Retries=5

# Step 1: Core build tools
RUN apt-get install -y --no-install-recommends \
    build-essential cmake git wget curl vim \
    python3-dev python3-pip

# Step 2: Core C++ libs (system)
RUN apt-get install -y --no-install-recommends \
    libeigen3-dev libpcl-dev libboost-all-dev libtbb-dev libmetis-dev libfmt-dev

# Step 3: Graphics support
RUN apt-get install -y --no-install-recommends \
    mesa-utils libgl1-mesa-glx

# Step 4: ROS core dependencies (basic messages, tf2, geometry, image transport)
RUN apt-get install -y --no-install-recommends \
    ros-humble-tf2-ros ros-humble-tf2 \
    ros-humble-geometry-msgs ros-humble-nav-msgs ros-humble-sensor-msgs \
    ros-humble-image-transport ros-humble-cv-bridge ros-humble-visualization-msgs

# Step 5: Optional ROS visualization & MAVROS
RUN apt-get install -y --no-install-recommends \
    ros-humble-rviz2 \
    ros-humble-mavros ros-humble-mavros-extras

# Step 6: ROS utilities & Eigen3 cmake module
RUN apt-get install -y --no-install-recommends \
    ros-humble-eigen3-cmake-module ros-humble-pcl-ros ros-humble-rclpy

# Optional: Colcon tools (if not preinstalled)
RUN pip3 install -U colcon-common-extensions matplotlib

# Finally cleanup
RUN rm -rf /var/lib/apt/lists/*

# ---- GTSAM (from official repo) ----
WORKDIR /tmp/gtsam
RUN git clone --branch 4.2 https://github.com/borglab/gtsam.git gtsam && \
    mkdir -p gtsam/build && cd gtsam/build && \
    cmake .. \
      -DCMAKE_BUILD_TYPE=Release \
      -DGTSAM_BUILD_WITH_MARCH_NATIVE=OFF \
      -DGTSAM_USE_SYSTEM_EIGEN=ON \
      -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 \
      -DGTSAM_BUILD_EXAMPLES=OFF \
      -DGTSAM_BUILD_TESTS=OFF && \
    make -j$(nproc) && make install && \
    cp /usr/local/lib/libgtsam*.so /usr/lib/


# ==============================
#  Stage 2 — Swarm-LIO2 build
# ==============================
FROM dependencies AS swarm_lio2

ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_WS=/opt/swarm_lio_ws

# Create colcon workspace
RUN mkdir -p $ROS_WS/src
WORKDIR $ROS_WS/src

# Copy Swarm-LIO2 source code
COPY src/ $ROS_WS/src/

# Build the workspace
WORKDIR $ROS_WS
RUN /bin/bash -c "source /opt/ros/humble/setup.bash && colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release"

# Source ROS and workspace by default
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN echo "source $ROS_WS/install/setup.bash" >> ~/.bashrc

# Default command
CMD ["/bin/bash"]
